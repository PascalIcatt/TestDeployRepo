name: Build, Push, and Deploy with Helm

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Generate version tag
        id: version
        run: |
          VERSION=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          if [ -z "$VERSION" ]; then
            VERSION="0.0.0"
          fi
          COMMIT=$(git rev-parse --short HEAD)
          IMAGE_TAG="${VERSION}-${COMMIT}"
          echo "::set-output name=image_tag::$IMAGE_TAG"
          CHART_VERSION="${VERSION}-${GITHUB_RUN_NUMBER}"
          echo "::set-output name=chart_version::$CHART_VERSION"

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PACKAGE_SECRET }}

      - name: Build and push Web API image
        run: |
          docker build -t ghcr.io/pascalicatt/mywebapi:${{ steps.version.outputs.image_tag }} -f MyWebApi/Dockerfile .
          docker push ghcr.io/pascalicatt/mywebapi:${{ steps.version.outputs.image_tag }}

      - name: Build and push CronJob image
        run: |
          docker build -t ghcr.io/pascalicatt/mycronjob:${{ steps.version.outputs.image_tag }} -f MyCronJob/Dockerfile .
          docker push ghcr.io/pascalicatt/mycronjob:${{ steps.version.outputs.image_tag }}

      - name: Update Helm chart version
        run: |
          sed -i "s/^version:.*/version: ${{ steps.version.outputs.chart_version }}/" myapp-chart/Chart.yaml
          sed -i "s/^appVersion:.*/appVersion: ${{ steps.version.outputs.image_tag }}/" myapp-chart/Chart.yaml
          sed -i "s/tag: \"latest\"/tag: \"${{ steps.version.outputs.image_tag }}\"/" myapp-chart/values.yaml

      # Use Chart Releaser to package and publish the chart to the gh-pages branch
      - name: Release Helm Charts with Chart Releaser
        uses: helm/chart-releaser-action@v1.3.0
        env:
          CR_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CR_OWNER: ${{ github.repository_owner }}
          CR_REPO: ${{ github.event.repository.name }}

      - name: Deploy with Helm
        run: |
          helm repo add myrepo https://pascalicatt.github.io/testdeployrepo/
          helm repo update
          helm upgrade --install myapp myrepo/myapp --version ${{ steps.version.outputs.chart_version }} --atomic --timeout 300s
